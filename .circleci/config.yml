version: 2.1
orbs:
  aws-cli: circleci/aws-cli@2.0.3
commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
jobs:
  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file CloudFormation/template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region eu-west-2
  testing:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["1e:3d:96:35:ce:53:25:b9:b7:97:54:11:e6:44:1f:f0"]
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and Configure Server
          command: |
            ansible-playbook -i inventory.txt main.yml
  rollback_test:
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: simultate rollback
          command:  return 1
      - destroy_environment
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="https://blog.udacity.com/"
            # Test if website exists
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi
workflows:
  myWorkflow:
    jobs:
      - create_infrastructure
      - rollback_test:
          requires:
            - create_infrastructure

